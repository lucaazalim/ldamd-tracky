spring:
  application:
    name: order-service
  profiles:
    active: local
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: order-service
        instance-id: ${spring.application.name}:${server.port}
        health-check-path: /actuator/health
        health-check-interval: 15s

# Google Maps API Configuration
google:
  maps:
    api:
      key: AIzaSyDu9ndl3FCCcfY1j04gAEQLO--XxuUxRBA

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics
  endpoint:
    health:
      show-details: always
---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5433/orderdb
    username: orderservice
    password: orderpass123
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
server:
  port: 8082

logging:
  level:
    com.tracky.orderservice: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker
  cloud:
    consul:
      host: ${CONSUL_HOST:consul}
      port: ${CONSUL_PORT:8500}
      discovery:
        service-name: order-service
        instance-id: ${spring.application.name}:${server.port}
        health-check-path: /actuator/health
        health-check-interval: 15s
        hostname: order-service
        prefer-ip-address: true
  datasource:
    url: jdbc:postgresql://${DB_HOST:order-db}:${DB_PORT:5432}/${DB_NAME:orderdb}
    username: ${DB_USERNAME:orderservice}
    password: ${DB_PASSWORD:orderpass123}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect

server:
  port: 8082

logging:
  level:
    com.tracky.orderservice: INFO
