spring:
  application:
    name: user-service
  profiles:
    active: local
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: user-service
        instance-id: ${spring.application.name}:${server.port}
        health-check-path: /actuator/health
        health-check-interval: 15s

server:
  port: 8081

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics
  endpoint:
    health:
      show-details: always

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/userdb
    username: userservice
    password: ${USER_DB_PASSWORD}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  server:
    port: 8081

jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000 # 24 hours

logging:
  level:
    com.tracky.userservice: DEBUG
    org.springframework.security: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://${DB_HOST:user-db}:${DB_PORT:5432}/${DB_NAME:userdb}
    username: ${DB_USERNAME:userservice}
    password: ${DB_PASSWORD:${USER_DB_PASSWORD}}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: create-drop
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect

  cloud:
    consul:
      host: ${CONSUL_HOST:consul}
      port: ${CONSUL_PORT:8500}
      discovery:
        service-name: user-service
        instance-id: ${spring.application.name}:${server.port}
        health-check-path: /actuator/health
        health-check-interval: 15s
        hostname: user-service
        prefer-ip-address: true

server:
  port: 8081

jwt:
  secret: ${JWT_SECRET}
  expiration: 86400000

logging:
  level:
    com.tracky.userservice: INFO
