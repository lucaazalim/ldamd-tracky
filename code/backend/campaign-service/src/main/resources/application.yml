spring:
  application:
    name: campaign-service
  profiles:
    active: local
  cloud:
    consul:
      host: localhost
      port: 8500
      discovery:
        service-name: campaign-service
        instance-id: ${spring.application.name}:${server.port}
        health-check-path: /actuator/health
        health-check-interval: 15s

server:
  port: 8085

management:
  endpoints:
    web:
      exposure:
        include: health, info, metrics
  endpoint:
    health:
      show-details: always

# OpenAPI Configuration
springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.html

---
spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5436/campaigndb
    username: campaignservice
    password: ${CAMPAIGN_DB_PASSWORD:password}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: localhost
    port: 5672
    username: tracky
    password: ${RABBITMQ_PASSWORD:password}

app:
  rabbitmq:
    exchange: tracky.exchange
    queue:
      campaign-notification: campaign.notification.queue
    routing-key:
      campaign-notification: campaign.notification
  user-service:
    url: http://user-service:8081

logging:
  level:
    com.tracky.campaignservice: DEBUG

---
spring:
  config:
    activate:
      on-profile: docker
  datasource:
    url: jdbc:postgresql://${DB_HOST:campaign-db}:${DB_PORT:5432}/${DB_NAME:campaigndb}
    username: ${DB_USERNAME:campaignservice}
    password: ${DB_PASSWORD:${CAMPAIGN_DB_PASSWORD}}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
    show-sql: false
    properties:
      hibernate:
        format_sql: false
        dialect: org.hibernate.dialect.PostgreSQLDialect
  rabbitmq:
    host: ${RABBITMQ_HOST:rabbitmq}
    port: ${RABBITMQ_PORT:5672}
    username: ${RABBITMQ_USERNAME:tracky}
    password: ${RABBITMQ_PASSWORD:${RABBITMQ_PASSWORD}}
  cloud:
    consul:
      host: ${CONSUL_HOST:consul}
      port: ${CONSUL_PORT:8500}
      discovery:
        service-name: campaign-service
        instance-id: ${spring.application.name}:${server.port}
        health-check-path: /actuator/health
        health-check-interval: 15s
        hostname: campaign-service
        prefer-ip-address: true

server:
  port: 8085

app:
  rabbitmq:
    exchange: tracky.exchange
    queue:
      campaign-notification: campaign.notification.queue
    routing-key:
      campaign-notification: campaign.notification
  user-service:
    url: http://${USER_SERVICE_HOST:user-service}:${USER_SERVICE_PORT:8081}

logging:
  level:
    com.tracky.campaignservice: INFO
