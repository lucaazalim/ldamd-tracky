services:
  # Consul Service Discovery
  consul:
    image: consul:1.15.2
    container_name: consul
    ports:
      - "8500:8500"
      - "8300:8300"
      - "8301:8301"
      - "8302:8302"
    environment:
      - CONSUL_BIND_INTERFACE=eth0
    command:
      [
        "consul",
        "agent",
        "-server",
        "-bootstrap",
        "-ui",
        "-client=0.0.0.0",
        "-bind=0.0.0.0",
        "-data-dir=/consul/data",
      ]
    volumes:
      - consul_data:/consul/data
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8500/v1/status/leader"]
      interval: 30s
      timeout: 10s
      retries: 5

  # PostgreSQL for User Service
  user-db:
    image: postgres:15-alpine
    container_name: user-db
    environment:
      POSTGRES_DB: userdb
      POSTGRES_USER: userservice
      POSTGRES_PASSWORD: userpass123
    ports:
      - "5432:5432"
    volumes:
      - user_db_data:/var/lib/postgresql/data

  # PostgreSQL for Order Service
  order-db:
    image: postgres:15-alpine
    container_name: order-db
    environment:
      POSTGRES_DB: orderdb
      POSTGRES_USER: orderservice
      POSTGRES_PASSWORD: orderpass123
    ports:
      - "5433:5432"
    volumes:
      - order_db_data:/var/lib/postgresql/data

  # PostgreSQL for Tracking Service
  tracking-db:
    image: postgres:15-alpine
    container_name: tracking-db
    environment:
      POSTGRES_DB: trackingdb
      POSTGRES_USER: trackingservice
      POSTGRES_PASSWORD: trackingpass123
    ports:
      - "5434:5432"
    volumes:
      - tracking_db_data:/var/lib/postgresql/data

  # User Service
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "8081:8081"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: user-db
      DB_PORT: 5432
      DB_NAME: userdb
      DB_USERNAME: userservice
      DB_PASSWORD: userpass123
      JWT_SECRET: 962f8f793fad33fe370eda6ce556c53ae458d6b55f57e27baf7ff43dba3435d1
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      consul:
        condition: service_healthy
      user-db:
        condition: service_started

  # Order Service
  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    container_name: order-service
    ports:
      - "8082:8082"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: order-db
      DB_PORT: 5432
      DB_NAME: orderdb
      DB_USERNAME: orderservice
      DB_PASSWORD: orderpass123
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      consul:
        condition: service_healthy
      order-db:
        condition: service_started

  # Tracking Service
  tracking-service:
    build:
      context: ./tracking-service
      dockerfile: Dockerfile
    container_name: tracking-service
    ports:
      - "8083:8083"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DB_HOST: tracking-db
      DB_PORT: 5432
      DB_NAME: trackingdb
      DB_USERNAME: trackingservice
      DB_PASSWORD: trackingpass123
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      consul:
        condition: service_healthy
      tracking-db:
        condition: service_started

  # API Gateway
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      JWT_SECRET: 962f8f793fad33fe370eda6ce556c53ae458d6b55f57e27baf7ff43dba3435d1
      CONSUL_HOST: consul
      CONSUL_PORT: 8500
    depends_on:
      consul:
        condition: service_healthy
      user-service:
        condition: service_started
      order-service:
        condition: service_started
      tracking-service:
        condition: service_started

volumes:
  consul_data:
  user_db_data:
  order_db_data:
  tracking_db_data:
